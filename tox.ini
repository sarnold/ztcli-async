[tox]
envlist = py3{7,8,9,10}-{linux,macos,windows}
skip_missing_interpreters = true
isolated_build = true
skipsdist = True

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
PLATFORM =
    ubuntu-20.04: linux
    macos-latest: macos
    windows-latest: windows

[base]
deps =
    pip>=21.1
    versioningit

[build]
deps =
    pip>=21.1
    wheel
    build
    twine

[testenv]
skip_install = true

passenv =
    CI
    OS
    PYTHON
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

setenv =
    PYTHONPATH={toxinidir}

allowlist_externals =
    bash

deps =
    {[base]deps}
    -r requirements-dev.txt
    .

commands =
    python -m pytest --capture=fd -v test/ --cov=ztcli_api --cov-branch --cov-report term-missing
    coverage xml
    bash -c './.github/fix_pkg_name.sh'

[testenv:dev]
skip_install = true

passenv =
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    -r requirements-dev.txt
    -e .

commands =
    pytest --flake8 ztcli_api

[testenv:docs]
skip_install = true
allowlist_externals =
    make

deps =
    {[base]deps}
    .[doc]

commands_pre =
    # need to generate version info in a fresh checkout
    python setup.py egg_info

commands = make -C docs html

[testenv:docs-lint]
skip_install = true
allowlist_externals =
    make

deps =
    {[base]deps}
    .[doc]

commands_pre =
    # need to generate version info in a fresh checkout
    python setup.py egg_info

commands = make -C docs linkcheck

[testenv:build]
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

allowlist_externals = bash

deps =
    {[build]deps}

commands =
    python -m build .
    twine check dist/*

[testenv:check]
skip_install = true
passenv = CI

deps =
    pip>=22.1

commands =
    pip install ztcli-async --pre --prefer-binary -f dist/
    python -c 'import pkg_resources; print(pkg_resources.get_distribution("ztcli-async").version)'

[testenv:lint]
passenv =
    pythonLocation
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    aiohttp
    async_timeout
    pylint

commands_pre =
    # need to generate version info in a fresh checkout
    python setup.py egg_info

commands = pylint --ignore=_version.py --fail-under=9.80 ztcli_api

[testenv:mypy]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    aiohttp
    async_timeout
    mypy

commands_pre =
    # need to generate version info in a fresh checkout
    python setup.py egg_info

commands =
    python -m mypy --follow-imports=normal --install-types --non-interactive ztcli_api/

[testenv:isort]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    isort

commands =
    python -m isort ztcli_api/ examples/

[testenv:clean]
skip_install = true
allowlist_externals =
    bash

deps =
    pip>=21.1

commands =
    bash -c 'make -C docs/ clean'
    bash -c 'rm -rf build/ dist/ *.egg-info/ docs/source/api/ ztcli_api/_version.py coverage.xml'
